import React, { useState } from "react";
import { Panel, PanelHeader } from "../../../components/panel/panel.jsx"; // Assuming these components are already available
import { Modal, Button, Input, Form, Row, Col, DatePicker } from "antd";

function Kanban_board() {
  const [isModalVisible, setIsModalVisible] = useState(false); // Modal visibility state
  const [form] = Form.useForm(); // Ant Design form instance
  const [tasks, setTasks] = useState([]); // State to store tasks

  // Show Modal
  const showModal = () => {
    setIsModalVisible(true);
  };

  // Handle Cancel (close Modal)
  const handleCancel = () => {
    setIsModalVisible(false);
  };

  // Handle Form Submit
  const handleSubmit = (values) => {
    const newTask = {
      ...values,
      id: Math.random(), // Random ID for each task (you can replace this with actual IDs)
      status: "To Do", // Default status is 'To Do'
    };
    setTasks([...tasks, newTask]); // Add new task to the task list
    setIsModalVisible(false); // Close modal after submitting the form
  };

  // Handle status change (e.g., moving a task between columns)
  const changeTaskStatus = (taskId, newStatus) => {
    setTasks(
      tasks.map((task) =>
        task.id === taskId ? { ...task, status: newStatus } : task
      )
    );
  };

  // Priority color logic
  const getPriorityColor = (priority) => {
    switch (priority) {
      case "High":
        return "red";
      case "Medium":
        return "orange";
      case "Low":
        return "green";
      default:
        return "gray";
    }
  };

  return (
    <div
      style={{
        minHeight: "100vh",
        backgroundImage: "url(../assets/img/cover/cover-scrum-board.png)",
        backgroundRepeat: "no-repeat",
        backgroundAttachment: "fixed",
        backgroundSize: "360px",
        backgroundPosition: "right bottom",
      }}
    >
      <div className="d-flex align-items-center mb-3">
        <div>
          <h1 className="page-header mb-0">Scrum Board</h1>
        </div>

        <div className="ms-auto">
          <Button
            type="primary"
            icon={<i className="fa fa-plus fa-mx me-2 ms-n2 "></i>}
            onClick={showModal}
            className="rounded-pill px-4"
            style={{ fontSize: "15px", padding: "20px" }}
          >
            Add Task
          </Button>
        </div>
      </div>
      <div className="mb-3 d-md-flex fw-bold">
        <div className="dropdown-toggle">
          <a
            href="#/"
            data-bs-toggle="dropdown"
            className="text-decoration-none text-dark"
          >
            <i className="far fa-folder fa-fw text-dark text-opacity-50 me-1"></i>{" "}
            project/color-admin <b className="caret"></b>
          </a>
          <div className="dropdown-menu dropdown-menu-start">
            <a href="#/" className="dropdown-item">
              <i className="far fa-folder fa-fw fa-lg text-gray-500 me-1"></i>{" "}
              project/mobile-app-dev
            </a>
            <a href="#/" className="dropdown-item">
              <i className="far fa-folder fa-fw fa-lg text-gray-500 me-1"></i>{" "}
              project/bootstrap-5
            </a>
            <a href="#/" className="dropdown-item">
              <i className="far fa-folder fa-fw fa-lg text-gray-500 me-1"></i>{" "}
              project/mvc-version
            </a>
            <a href="#/" className="dropdown-item">
              <i className="far fa-folder fa-fw fa-lg text-gray-500 me-1"></i>{" "}
              project/ruby-version
            </a>
          </div>
        </div>
      </div>
      {/* Kanban Columns */}
      <div className="row">
        {/* To Do Column */}
        <div className="col-xl-4 col-lg-6 mb-3">
          <Panel className="border border-gray-500">
            <PanelHeader>
              To Do ({tasks.filter((task) => task.status === "To Do").length})
            </PanelHeader>
            <div className="list-group list-group-flush rounded-bottom overflow-hidden panel-body p-0">
              {tasks
                .filter((task) => task.status === "To Do")
                .map((task) => (
                  <div key={task.id} className="list-group-item">
                    <h5
                      style={{
                        fontSize: "18px",
                        fontWeight: "600",
                        marginBottom: "8px",
                        color: "#333",
                      }}
                    >
                      {task.taskName}
                    </h5>
                    <p
                      style={{
                        fontSize: "15px",
                        color: "#555",
                        marginBottom: "12px",
                      }}
                    >
                      {task.description}
                    </p>
                    <div
                      style={{
                        marginBottom: "10px",
                        display: "flex",
                        alignItems: "center",
                      }}
                    >
                      <div
                        style={{
                          width: "12px",
                          height: "12px",
                          backgroundColor: getPriorityColor(task.priority),
                          borderRadius: "50%",
                          marginRight: "8px",
                        }}
                      ></div>
                      <span
                        style={{
                          fontWeight: "500",
                          fontSize: "14px",
                          color: "#333",
                        }}
                      >
                        {task.priority} Priority
                      </span>
                    </div>
                    <Button
                      type="primary"
                      onClick={() => changeTaskStatus(task.id, "In Progress")}
                    >
                      Start
                    </Button>
                  </div>
                ))}
            </div>
          </Panel>
        </div>

        {/* In Progress Column */}
        <div className="col-xl-4 col-lg-6 mb-3">
          <Panel className="border border-gray-500">
            <PanelHeader>
              In Progress (
              {tasks.filter((task) => task.status === "In Progress").length})
            </PanelHeader>
            <div className="list-group list-group-flush rounded-bottom overflow-hidden panel-body p-0">
              {tasks
                .filter((task) => task.status === "In Progress")
                .map((task) => (
                  <div key={task.id} className="list-group-item">
                    <h5
                      style={{
                        fontSize: "18px",
                        fontWeight: "600",
                        marginBottom: "8px",
                        color: "#333",
                      }}
                    >
                      {task.taskName}
                    </h5>
                    <p
                      style={{
                        fontSize: "15px",
                        color: "#555",
                        marginBottom: "12px",
                      }}
                    >
                      {task.description}
                    </p>
                    <div
                      style={{
                        marginBottom: "10px",
                        display: "flex",
                        alignItems: "center",
                      }}
                    >
                      <div
                        style={{
                          width: "12px",
                          height: "12px",
                          backgroundColor: getPriorityColor(task.priority),
                          borderRadius: "50%",
                          marginRight: "8px",
                        }}
                      ></div>
                      <span
                        style={{
                          fontWeight: "500",
                          fontSize: "14px",
                          color: "#333",
                        }}
                      >
                        {task.priority} Priority
                      </span>
                    </div>
                    <Button
                      type="primary"
                      onClick={() => changeTaskStatus(task.id, "Done")}
                    >
                      Complete
                    </Button>
                  </div>
                ))}
            </div>
          </Panel>
        </div>

        {/* Done Column */}
        <div className="col-xl-4 col-lg-6 mb-3">
          <Panel className="border border-gray-500">
            <PanelHeader>
              Done ({tasks.filter((task) => task.status === "Done").length})
            </PanelHeader>
            <div className="list-group list-group-flush rounded-bottom overflow-hidden panel-body p-0">
              {tasks
                .filter((task) => task.status === "Done")
                .map((task) => (
                  <div key={task.id} className="list-group-item">
                    <h5
                      style={{
                        fontSize: "18px",
                        fontWeight: "600",
                        marginBottom: "8px",
                        color: "#333",
                      }}
                    >
                      {task.taskName}
                    </h5>
                    <p
                      style={{
                        fontSize: "15px",
                        color: "#555",
                        marginBottom: "12px",
                      }}
                    >
                      {task.description}
                    </p>
                    <div
                      style={{
                        marginBottom: "10px",
                        display: "flex",
                        alignItems: "center",
                      }}
                    >
                      <div
                        style={{
                          width: "12px",
                          height: "12px",
                          backgroundColor: getPriorityColor(task.priority),
                          borderRadius: "50%",
                          marginRight: "8px",
                        }}
                      ></div>
                      <span
                        style={{
                          fontWeight: "500",
                          fontSize: "14px",
                          color: "#333",
                        }}
                      >
                        {task.priority} Priority
                      </span>
                    </div>
                  </div>
                ))}
            </div>
          </Panel>
        </div>
      </div>

      {/* Add Task Modal */}
      <Modal
        title="Add New Task"
        visible={isModalVisible}
        onCancel={handleCancel}
        footer={null}
        destroyOnClose
      >
        <Form form={form} layout="vertical" onFinish={handleSubmit}>
          <Row gutter={16}>
            <Col span={24}>
              <Form.Item
                label="Task Name"
                name="taskName"
                rules={[
                  { required: true, message: "Please input the task name!" },
                ]}
              >
                <Input placeholder="Enter task name" />
              </Form.Item>
            </Col>
            <Col span={24}>
              <Form.Item
                label="Description"
                name="description"
                rules={[
                  {
                    required: true,
                    message: "Please input the task description!",
                  },
                ]}
              >
                <Input.TextArea placeholder="Enter task description" />
              </Form.Item>
            </Col>
            <Col span={24}>
              <Form.Item
                label="Priority"
                name="priority"
                rules={[
                  { required: true, message: "Please select task priority!" },
                ]}
              >
                <select className="form-control">
                  <option value="Default">Default</option>
                  <option value="High">High</option>
                  <option value="Medium">Medium</option>
                  <option value="Low">Low</option>
                </select>
              </Form.Item>
            </Col>
            <Col span={24}>
              <Form.Item
                label="Due Date"
                name="dueDate"
                rules={[
                  { required: true, message: "Please select a due date!" },
                ]}
              >
                <DatePicker
                  className="form-control"
                  placeholder="Select due date"
                />
              </Form.Item>
            </Col>
            <Col span={24}>
              <Form.Item>
                <Button type="primary" htmlType="submit" block>
                  Add Task
                </Button>
              </Form.Item>
            </Col>
          </Row>
        </Form>
      </Modal>
    </div>
  );
}

export default Kanban_board;
