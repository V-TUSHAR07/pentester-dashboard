import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import {
  Panel,
  PanelHeader,
  PanelBody,
} from "../../components/panel/panel.jsx";
import Chart from "chart.js/auto";
import jsVectorMap from "jsvectormap";
import "jsvectormap/dist/maps/world.js";
import "jsvectormap/dist/jsvectormap.min.css";
import ChartApex from "./Projects details/chart/barchart.jsx";
import ChartJs from "./Projects details/chart/chart.jsx";

function Home() {
  const [selectedProject, setSelectedProject] = useState("project1");

  const sourceColors = {
    Critical: "bg-danger", // Red
    High: "bg-orange", // Orange
    Medium: "bg-yellow", // yellow
    Low: "bg-green", // Green
    "Referral Traffic": "bg-purple", // Purple
    "Returning Visitors": "bg-warning", // Yellow
    // Add more sources with unique colors as needed
  };

  const [projectData, setProjectData] = useState({
    project1: {
      analytics: [
        { source: "Critical", total: 203 },
        { source: "High", total: 28.2 },
        { source: "Medium", total: 99 },
        { source: "Low", total: 229 },
        { source: "Info", total: 259 },
      ],
      trendLevels: { Critical: 50, High: 30, Medium: 70, Low: 40, Info: 90 },
      criticalityPercentages: [29, 35, 15, 25],
    },
    project2: {
      analytics: [
        { source: "Critical", total: 200 },
        { source: "High", total: 329.4 },
        { source: "Medium", total: 401 },
        { source: "Low", total: 423 },
        { source: "Info", total: 493 },
      ],
      trendLevels: { Critical: 60, High: 40, Medium: 50, Low: 30, Info: 80 },
      criticalityPercentages: [30, 40, 20, 10],
    },
    project3: {
      analytics: [
        { source: "Critical", total: 800 },
        { source: "High", total: 295.6 },
        { source: "Medium", total: 200 },
        { source: "Low", total: 258.6 },
        { source: "Info", total: 200 },
      ],
      trendLevels: { Critical: 40, High: 35, Medium: 60, Low: 50, Info: 70 },
      criticalityPercentages: [20, 25, 30, 25],
    },
    project4: {
      analytics: [
        { source: "Critical", total: 700 },
        { source: "High", total: 999.2 },
        { source: "Medium", total: 432 },
        { source: "Low", total: 730.2 },
        { source: "Info", total: 432 },
      ],
      trendLevels: { Critical: 45, High: 30, Medium: 65, Low: 40, Info: 85 },
      criticalityPercentages: [28, 32, 25, 15],
    },
  });

  // Color and Chart Configurations
  const colors = {
    red: getComputedStyle(document.body).getPropertyValue("--bs-red").trim(),
    blue: getComputedStyle(document.body).getPropertyValue("--bs-blue").trim(),
    componentBg: getComputedStyle(document.body)
      .getPropertyValue("--bs-component-bg")
      .trim(),
  };

  function handleProjectChange(projectId) {
    setSelectedProject(projectId);
  }

  useEffect(() => {
    // Any additional side effects or data fetching can go here
  }, [selectedProject]);

  return (
    <div>
      <ol className="breadcrumb float-xl-end">
        <li className="breadcrumb-item">
          <Link to="/">Home</Link>
        </li>
        <li className="breadcrumb-item active">Dashboard</li>
      </ol>
      <h1 className="page-header">
        Dashboard <small>Overview</small>
      </h1>

      {/* Stats Widgets */}
      <div className="row">
        <div className="col-xl-3 col-md-6">
          <div className="widget widget-stats bg-blue">
            <div className="stats-icon">
              <i className="fa fa-desktop"></i>
            </div>
            <div className="stats-info">
              <h4>NUMBER OF PROJECTS</h4>
              <p>3,291,922</p>
            </div>
            <div className="stats-link">
              <Link to="/dashboard/v1">
                View Detail <i className="fa fa-arrow-alt-circle-right"></i>
              </Link>
            </div>
          </div>
        </div>
        <div className="col-xl-3 col-md-6">
          <div className="widget widget-stats bg-info">
            <div className="stats-icon">
              <i className="fa fa-link"></i>
            </div>
            <div className="stats-info">
              <h4>ACTIVE PROJECTS</h4>
              <p>20.44%</p>
            </div>
            <div className="stats-link">
              <Link to="/dashboard/v1">
                View Detail <i className="fa fa-arrow-alt-circle-right"></i>
              </Link>
            </div>
          </div>
        </div>
        <div className="col-xl-3 col-md-6">
          <div className="widget widget-stats bg-orange">
            <div className="stats-icon">
              <i className="fa fa-users"></i>
            </div>
            <div className="stats-info">
              <h4>COMPLETED PROJECTS</h4>
              <p>1,291,922</p>
            </div>
            <div className="stats-link">
              <Link to="/dashboard/v1">
                View Detail <i className="fa fa-arrow-alt-circle-right"></i>
              </Link>
            </div>
          </div>
        </div>
        <div className="col-xl-3 col-md-6">
          <div className="widget widget-stats bg-red">
            <div className="stats-icon">
              <i className="fa fa-clock"></i>
            </div>
            <div className="stats-info">
              <h4>PROJECT IN PROGRESS</h4>
              <p>1,654,6854</p>
            </div>
            <div className="stats-link">
              <Link to="/dashboard/v1">
                View Detail <i className="fa fa-arrow-alt-circle-right"></i>
              </Link>
            </div>
          </div>
        </div>
      </div>
      <div className="mb-4 mt-4 d-md-flex align-items-center">
        {/* Dropdown for Projects */}
        <div className="dropdown">
          <button
            className="btn btn-outline-dark text-start dropdown-toggle d-flex align-items-center justify-content-center"
            type="button"
            id="projectsDropdown"
            data-bs-toggle="dropdown"
            aria-expanded="false"
            style={{
              width: "174%",
              paddingLeft: "15px", // Ensure the left padding for the icon doesn't interfere
              paddingRight: "10px", // Ensure the right padding for the icon doesn't interfere
            }}
          >
            <i className="fas fa-briefcase fa-fw text-dark me-2 text-start"></i>
            <span className="text-center" style={{ flex: 1 }}>
              PROJECTS
            </span>
          </button>
          <ul className="dropdown-menu" aria-labelledby="projectsDropdown">
            {Object.keys(projectData).map((project) => (
              <li key={project}>
                <a
                  href="#/"
                  className="dropdown-item"
                  onClick={() => handleProjectChange(project)}
                >
                  {project.charAt(0).toUpperCase() + project.slice(1)}
                </a>
              </li>
            ))}
          </ul>
        </div>

        {/* Boxes for Project Name and Status with Equal Gaps */}
        <div
          className="d-flex ms-3 justify-content-between"
          style={{ width: "100%" }}
        >
          {/* Box for Project Name with same width as Trends */}
          <div
            className="p-2 border rounded"
            style={{
              fontSize: "1rem",
              backgroundColor: "#f8f9fa", // light background color
              borderColor: "#dcdcdc", // light border color
              width: "113%",
              marginLeft: "100px", // make it stretch the full available width
            }}
          >
            <strong>Project Name:&nbsp;&nbsp; </strong>
            {selectedProject.charAt(0).toUpperCase() + selectedProject.slice(1)}
          </div>

          {/* Box for Status with same width as Criticality Distribution (%) */}
          <div
            className="p-2 border rounded"
            style={{
              fontSize: "1rem",
              backgroundColor: "#f8f9fa", // light background color
              borderColor: "#dcdcdc", // light border color
              width: "74%",
              marginLeft: "29px", // make it stretch the full available width
            }}
          >
            <strong>Status: &nbsp;&nbsp;</strong>
            {(() => {
              switch (selectedProject) {
                case "project1":
                  return <span className="badge bg-success">Active</span>;
                case "project2":
                  return <span className="badge bg-warning">In Progress</span>;
                case "project3":
                  return <span className="badge bg-danger">Inactive</span>;
                case "project4":
                  return <span className="badge bg-primary">Completed</span>;
                default:
                  return <span className="badge bg-secondary">No Data</span>;
              }
            })()}
          </div>
        </div>
      </div>

      <div className="row">
        {/* Panel with Analytics */}
        <div className="col-xl-2 col-md-2">
          <Panel>
            <PanelHeader>Analytics</PanelHeader>
            <PanelBody className="p-0">
              <div className="table-responsive" style={{ width: "100%" }}>
                <table className="table table-panel align-middle mb-0">
                  <thead>
                    <tr>
                      <th style={{ width: "150px" }}>Source</th>
                      {/* Consistent column width */}
                      <th>Total</th>
                    </tr>
                  </thead>
                  <tbody>
                    {projectData[selectedProject].analytics.map(
                      (item, index) => {
                        const badgeClass =
                          sourceColors[item.source] || "bg-secondary"; // Fallback color

                        return (
                          <tr key={index} className="mb-2">
                            <td
                              style={{
                                paddingTop: "22px",
                                paddingBottom: "22px",
                                width: "150px", // Consistent column width
                                whiteSpace: "nowrap",
                              }}
                            >
                              <label
                                className={`badge ${badgeClass} text-white`}
                                style={{
                                  display: "inline-block",
                                  padding: "8px 15px", // Add consistent padding to badges
                                  minWidth: "90px", // Ensure each badge has the same width
                                  textAlign: "center", // Center align text
                                }}
                              >
                                {item.source}
                              </label>
                            </td>
                            <td
                              style={{
                                paddingTop: "22px",
                                paddingBottom: "22px",
                              }}
                            >
                              {item.total}
                            </td>
                          </tr>
                        );
                      }
                    )}
                  </tbody>
                </table>
              </div>
            </PanelBody>
          </Panel>
        </div>

        {/* Panel with Trend Graph */}
        <div className="col-xl-6 col-md-6">
          <Panel>
            <PanelHeader>Trend</PanelHeader>
            <PanelBody className="p-2">
              <div className="trend-graph">
                <ChartApex
                  levels={projectData[selectedProject].trendLevels}
                  totalValues={projectData[selectedProject].analytics.map(
                    (item) => item.total
                  )}
                />
              </div>
            </PanelBody>
          </Panel>
        </div>

        {/* Panel with Criticality Distribution (%) */}
        <div className="col-xl-4 col-md-6">
          <Panel>
            <PanelHeader>Criticality Distribution (%)</PanelHeader>
            <PanelBody className="d-flex justify-content-center align-content-center">
              <ChartJs
                levelPercentages={
                  projectData[selectedProject].criticalityPercentages
                }
              />
            </PanelBody>
          </Panel>
        </div>
      </div>
    </div>
  );
}

export default Home;
