import React, { useState } from "react";

const AddProjectForm = ({ onClose, onAddProject }) => {
  const [projectName, setProjectName] = useState("");
  const [description, setDescription] = useState("");
  const [testingUrl, setTestingUrl] = useState("");
  const [languages, setLanguages] = useState("");
  const [numInputFields, setNumInputFields] = useState("");
  const [staticPages, setStaticPages] = useState("");
  const [dynamicPages, setDynamicPages] = useState("");
  const [userRoles, setUserRoles] = useState("");
  const [hasEcommerce, setHasEcommerce] = useState("No");
  const [hasContentManagement, setHasContentManagement] = useState("No");
  const [accessType, setAccessType] = useState("Web");
  const [hostingType, setHostingType] = useState("Internal");
  const [reportAudience, setReportAudience] = useState("");
  const [needsInfrastructureTest, setNeedsInfrastructureTest] = useState("No");
  const [testPurpose, setTestPurpose] = useState("");
  const [numPublicIPs, setNumPublicIPs] = useState("");
  const [complianceRequirement, setComplianceRequirement] = useState("No");
  const [numDeviceTypes, setNumDeviceTypes] = useState("");
  const [hasNetworkManagementSystem, setHasNetworkManagementSystem] = useState("No");
  const [auditType, setAuditType] = useState("Remote");
  const [officeLocation, setOfficeLocation] = useState("");
  const [vpnRequired, setVpnRequired] = useState("No");
  const [codeLines, setCodeLines] = useState("");
  const [backendDetails, setBackendDetails] = useState("");
  const [frontendDetails, setFrontendDetails] = useState("");
  const [databaseDetails, setDatabaseDetails] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    const newProject = {
      projectName,
      description,
      testingUrl,
      languages,
      numInputFields,
      staticPages,
      dynamicPages,
      userRoles,
      hasEcommerce,
      hasContentManagement,
      accessType,
      hostingType,
      reportAudience,
      needsInfrastructureTest,
      testPurpose,
      numPublicIPs,
      complianceRequirement,
      numDeviceTypes,
      hasNetworkManagementSystem,
      auditType,
      officeLocation,
      vpnRequired,
      codeLines,
      backendDetails,
      frontendDetails,
      databaseDetails,
    };
    onAddProject(newProject);
    onClose();
  };

  return (
    <div className="modal">
      <form onSubmit={handleSubmit} className="modal-content">
        <span className="close" onClick={onClose}>&times;</span>
        <h2>Add Project</h2>

        <div>
          <label>Project Name</label>
          <input type="text" value={projectName} onChange={(e) => setProjectName(e.target.value)} required />
        </div>

        <div>
          <label>Description</label>
          <textarea value={description} onChange={(e) => setDescription(e.target.value)} required />
        </div>

        <div>
          <label>Testing URL</label>
          <input type="text" value={testingUrl} onChange={(e) => setTestingUrl(e.target.value)} required />
        </div>

        <div>
          <label>Languages</label>
          <input type="text" value={languages} onChange={(e) => setLanguages(e.target.value)} required />
        </div>

        <div>
          <label>Number of Input Fields</label>
          <input type="number" value={numInputFields} onChange={(e) => setNumInputFields(e.target.value)} required />
        </div>

        <div>
          <label>Static Pages</label>
          <input type="number" value={staticPages} onChange={(e) => setStaticPages(e.target.value)} required />
        </div>

        <div>
          <label>Dynamic Pages</label>
          <input type="number" value={dynamicPages} onChange={(e) => setDynamicPages(e.target.value)} required />
        </div>

        <div>
          <label>Number of User Roles</label>
          <input type="number" value={userRoles} onChange={(e) => setUserRoles(e.target.value)} required />
        </div>

        <div>
          <label>Has E-commerce</label>
          <select value={hasEcommerce} onChange={(e) => setHasEcommerce(e.target.value)}>
            <option value="No">No</option>
            <option value="Yes">Yes</option>
          </select>
        </div>

        <div>
          <label>Has Content Management</label>
          <select value={hasContentManagement} onChange={(e) => setHasContentManagement(e.target.value)}>
            <option value="No">No</option>
            <option value="Yes">Yes</option>
          </select>
        </div>

        <div>
          <label>Access Type</label>
          <select value={accessType} onChange={(e) => setAccessType(e.target.value)}>
            <option value="Web">Web</option>
            <option value="Internal">Internal</option>
          </select>
        </div>

        <div>
          <label>Hosting Type</label>
          <select value={hostingType} onChange={(e) => setHostingType(e.target.value)}>
            <option value="Internal">Internal</option>
            <option value="Third Party">Third Party</option>
          </select>
        </div>

        <div>
          <label>Report Audience</label>
          <input type="text" value={reportAudience} onChange={(e) => setReportAudience(e.target.value)} required />
        </div>

        <div>
          <label>Needs Infrastructure Test</label>
          <select value={needsInfrastructureTest} onChange={(e) => setNeedsInfrastructureTest(e.target.value)}>
            <option value="No">No</option>
            <option value="Yes">Yes</option>
          </select>
        </div>

        <div>
          <label>Test Purpose</label>
          <input type="text" value={testPurpose} onChange={(e) => setTestPurpose(e.target.value)} required />
        </div>

        <div>
          <label>Number of Public IPs</label>
          <input type="number" value={numPublicIPs} onChange={(e) => setNumPublicIPs(e.target.value)} required />
        </div>

        <div>
          <label>Compliance Requirement</label>
          <select value={complianceRequirement} onChange={(e) => setComplianceRequirement(e.target.value)}>
            <option value="No">No</option>
            <option value="Yes">Yes</option>
          </select>
        </div>

        <div>
          <label>Number of Device Types</label>
          <input type="number" value={numDeviceTypes} onChange={(e) => setNumDeviceTypes(e.target.value)} required />
        </div>

        <div>
          <label>Has Network Management System</label>
          <select value={hasNetworkManagementSystem} onChange={(e) => setHasNetworkManagementSystem(e.target.value)}>
            <option value="No">No</option>
            <option value="Yes">Yes</option>
          </select>
        </div>

        <div>
          <label>Audit Type</label>
          <select value={auditType} onChange={(e) => setAuditType(e.target.value)}>
            <option value="Remote">Remote</option>
            <option value="Physical">Physical</option>
          </select>
        </div>

        <div>
          <label>Office Location</label>
          <input type="text" value={officeLocation} onChange={(e) => setOfficeLocation(e.target.value)} required />
        </div>

        <div>
          <label>VPN Required</label>
          <select value={vpnRequired} onChange={(e) => setVpnRequired(e.target.value)}>
            <option value="No">No</option>
            <option value="Yes">Yes</option>
          </select>
        </div>

        <div>
          <label>Number of Lines of Code</label>
          <input type="number" value={codeLines} onChange={(e) => setCodeLines(e.target.value)} required />
        </div>

        <div>
          <label>Backend Details</label>
          <input type="text" value={backendDetails} onChange={(e) => setBackendDetails(e.target.value)} required />
        </div>

        <div>
          <label>Frontend Details</label>
          <input type="text" value={frontendDetails} onChange={(e) => setFrontendDetails(e.target.value)} required />
        </div>

        <div>
          <label>Database Details</label>
          <input type="text" value={databaseDetails} onChange={(e) => setDatabaseDetails(e.target.value)} required />
        </div>

        <button type="submit">Add Project</button>
      </form>
    </div>
  );
};

export default AddProjectForm;
