import React from 'react'
import { useParams, Link } from 'react-router-dom';
import { Panel, PanelHeader, PanelBody } from '../../../components/panel/panel.jsx';
import { projectData, projectVulnerabilities } from '../../../data/projectdata.jsx';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faSort } from '@fortawesome/free-solid-svg-icons'
import ChartJs from './chart/chart.jsx';
import ChartApex from './chart/barchart.jsx';

function ProjectOverview() {
    const { id } = useParams();
    const project = projectData.find(p => p.id === Number(id));
    const vulnerabilities = projectVulnerabilities[id] || [];

    if (!project) {
        return <div>Project not found!</div>;
    }

    // Count the vulnerabilities by criticality level
    const levels = { 'Info': 0, 'Low': 0, 'Medium': 0, 'High': 0, 'Critical': 0 };
    vulnerabilities.forEach(vul => levels[vul.criticality] = (levels[vul.criticality] || 0) + 1);

    // Calculate the percentage for each level
    const totalVulnerabilities = vulnerabilities.length;
    const levelPercentages = Object.keys(levels).map(level => (levels[level] / totalVulnerabilities) * 100);

    return (
        <div>
            <Panel>
                <PanelHeader>Project Detail</PanelHeader>
                <PanelBody>
                    <table className="table table-bordered widget-table widget-table-rounded">
                        <thead>
                            <tr className="text-center">
                                <th>Type</th>
                                <th>Project Name</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td className="text-center">
                                    {/* Replace with appropriate icon */}
                                    <FontAwesomeIcon icon={project.typeIcon} aria-hidden="true" />
                                </td>
                                <td>
                                    <h5>{project.projectName}</h5>
                                    <p className="fs-11px text-gray-600 fw-bold mb-3 text-justify">{project.description}</p>
                                    <div className="progress h-10px rounded-pill mb-5px">
                                        <div
                                            className={`progress-bar progress-bar-striped progress-bar-animated fs-10px fw-bold bg-${project.status === 'Active' ? 'green' : project.status === 'In progress' ? 'warning' : 'blue'}`}
                                            style={{ width: `${project.progress}%` }}
                                        >
                                            {project.progress}%
                                        </div>
                                    </div>
                                    <div className="clearfix fs-10px">
                                        Status: <b className="text-body">{project.status}</b>
                                    </div>
                                </td>
                                <td className="text-nowrap align-middle text-center">
                                    <b className="text-body">{project.startDate}</b>
                                </td>
                                <td className="mt-5 text-center align-middle">{project.endDate}</td>

                            </tr>
                        </tbody>
                    </table>
                </PanelBody>
            </Panel>
            <div className='d-flex justify-content-between'>
                <Panel className='w-50 me-2'>
                    <PanelHeader>Vulnerabilities by Severity</PanelHeader>
                    <PanelBody>
                        Graph content here
                        <ChartApex levels={levels} />
                    </PanelBody>
                </Panel>
                <Panel className='w-50 ms-2'>
                    <PanelHeader>Criticality Distribution (%)</PanelHeader>
                    <PanelBody className='d-flex justify-content-center align-content-center'>
                        <ChartJs levelPercentages={levelPercentages} />
                    </PanelBody>
                </Panel>
            </div>
            <div>
                <Panel>
                    <PanelHeader>Vulnerabilities</PanelHeader>
                    <PanelBody>
                        <table className="table table-bordered widget-table widget-table-rounded">
                            <thead>
                                <tr className="text-center">
                                    <th>S.No</th>
                                    <th>Vulnerability Name</th>
                                    <th>Criticality <i className='fas fa-arrow-up-short-wide'></i></th>
                                    <th>Status  <FontAwesomeIcon icon={faSort} className='cursor-pointer' /></th>
                                </tr>
                            </thead>
                            <tbody>
                                {vulnerabilities.map((vul, index) => (
                                    <tr key={index} className="text-center">
                                        <td>{index + 1}</td>
                                        <td className='text-primary cursor-pointer text-decoration-underline'><Link to='vulnerability'>{vul.name}</Link></td>
                                        <td >
                                            <span
                                                className={`badge bg-${vul.criticality === 'Info' ? 'info' : vul.criticality === 'Low' ? 'primary' : vul.criticality === 'Medium' ? 'yellow' : vul.criticality === 'High' ? 'warning' : 'danger'
                                                    } fs- p-2`}
                                                style={{ width: '4rem', textAlign: 'center', display: 'inline-block' }}>
                                                {vul.criticality.toUpperCase()}
                                            </span>
                                        </td>
                                        <td >
                                            <span className={`badge text-${vul.status === 'Open' ? 'danger' : 'success'} border border-${vul.status === 'Open' ? 'danger' : 'success'}`}>{vul.status.toUpperCase()}</span>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </PanelBody>
                </Panel>
            </div>
        </div>
    )
}

export default ProjectOverview;
